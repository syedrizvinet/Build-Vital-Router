name: Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "tag: git tag you want create. (sample 1.0.0)"
        required: true
      dry-run:
        description: "dry-run: false = create release/nuget. true = never create release/nuget."
        required: true
        default: false
        type: boolean

env:
  GIT_TAG: ${{ github.event.inputs.tag }}

jobs:
  update-version-number:
    uses: ./.github/workflows/update-version-number.yaml
    with:
      tag: ${{ github.event.inputs.tag }}
      dry-run: ${{ fromJson(github.event.inputs.dry-run) }}
   
  build-dotnet:
    needs: [update-version-number]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ needs.update-packagejson.outputs.sha }}
    - uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
          8.0.x
    - run: dotnet build -c Release
    - run: dotnet test -c Release --no-build
    - run: dotnet pack -c Release --no-build -o ./publish
    - uses: actions/upload-artifact@v3
      with:
        name: nuget
        path: ./publish
    - name: Publish
      if: github.event.inputs.dry-run == 'false'
      run: dotnet nuget push ./publish/*.nupkg -s 'https://api.nuget.org/v3/index.json' -k ${{secrets.NUGET_API_KEY}}
      
  create-release:
    if: github.event.inputs.dry-run == 'false'    
    needs: [update-version-number, build-dotnet]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    timeout-minutes: 10
    steps:
    # Create Releases
    - uses: softprops/action-gh-release@v1
      id: create_release
      with:
        tag_name: ${{ env.GIT_TAG }}
        name: v${{ env.GIT_TAG }}
        draft: true
        prerelease: false
        generate_release_notes: true
